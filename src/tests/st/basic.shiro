//! run

fn f(i: i32, f: i32) -> i32 {  //! warning: "'f' shadows previous declaration"
	return (f + 2) * i;
}

fn printIfLt100(i: i32) {
	if (i <= 100) {
		return;
	}
	printI32(i);
}

fn main() -> i32 {
	var i: i32;

	i = 3;
	++i;  // i = 4
	printI32(i);  //! stdout: "4"

	++i;  // i = 5
	printI32(i);  //! stdout: "5"

	i += 10;  // i = 15
	printI32(i);  //! stdout: "15"

	i -= 3;  // i = 12
	printI32(i);  //! stdout: "12"

	if (i > 5) {
		i = 10;
	}
	else {
		i = 20;
	}
	printI32(i);  //! stdout: "10"

	while (i > 5) {
		--i;
	}
	printI32(i);  //! stdout: "5"

	var sum = 0;
	for (var j = 1; j <= 5; ++j) {
		sum += j;
	}
	printI32(sum);  //! stdout: "15"

	//! stdout: "3"
	//! stdout: "2"
	//! stdout: "1"
	for (var k = 3; k > 0; --k) {
		printI32(k);
	}

	i *= 2;  // i = 10
	printI32(i);  //! stdout: "10"

	var result = f(10, i);
	printIfLt100(result);  //! stdout: "120"
	printIfLt100(result / 2);

	// Test break in while loop
	var count = 0;
	while (true) {
		++count;
		if (count == 3) {
			break;
		}
	}
	printI32(count);  //! stdout: "3"

	// Test continue in while loop
	var oddSum = 0;
	var idx = 0;
	while (idx < 5) {
		++idx;
		if (idx % 2 == 0) {
			continue;
		}
		oddSum += idx;
	}
	printI32(oddSum);  //! stdout: "9"

	// Test break in for loop
	var breakCount = 0;
	for (var m = 0; m < 10; ++m) {
		if (m == 4) {
			break;
		}
		++breakCount;
	}
	printI32(breakCount);  //! stdout: "4"

	// Test continue in for loop
	var evenCount = 0;
	for (var n = 0; n < 10; ++n) {
		if (n % 2 != 0) {
			continue;
		}
		++evenCount;
	}
	printI32(evenCount);  //! stdout: "5"

	return 0;
}
